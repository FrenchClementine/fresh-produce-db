"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/use-product-calendar.ts":
/*!*******************************************!*\
  !*** ./src/hooks/use-product-calendar.ts ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useProductCalendar: () => (/* binding */ useProductCalendar),\n/* harmony export */   useRandomProducts: () => (/* binding */ useRandomProducts)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* __next_internal_client_entry_do_not_use__ useProductCalendar,useRandomProducts auto */ \n\nasync function fetchProductCalendarData() {\n    let filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    let query = _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('supplier_product_packaging_spec').select(\"\\n      id,\\n      available_months,\\n      suppliers!inner(\\n        id,\\n        name,\\n        country\\n      ),\\n      product_packaging_specs!inner(\\n        id,\\n        products!inner(\\n          id,\\n          name,\\n          category\\n        ),\\n        packaging_options(\\n          label\\n        ),\\n        size_options(\\n          id,\\n          name\\n        )\\n      )\\n    \").not('available_months', 'is', null).not('suppliers.country', 'is', null);\n    if (searchTerm) {\n        query = query.ilike('product_packaging_specs.products.name', \"%\".concat(searchTerm, \"%\"));\n    }\n    const { data, error } = await query;\n    if (error) throw error;\n    // Process data to group by product and country\n    const processed = new Map();\n    data === null || data === void 0 ? void 0 : data.forEach((item)=>{\n        var _item_product_packaging_specs_packaging_options, _item_product_packaging_specs_size_options;\n        const productId = item.product_packaging_specs.products.id;\n        const productName = item.product_packaging_specs.products.name;\n        const country = item.suppliers.country;\n        const key = \"\".concat(productId, \"-\").concat(country);\n        if (!processed.has(key)) {\n            processed.set(key, {\n                product_id: productId,\n                product_name: productName,\n                country: country,\n                available_months: [],\n                suppliers: []\n            });\n        }\n        const entry = processed.get(key);\n        // Union the available months\n        if (item.available_months) {\n            const newMonths = item.available_months.filter((month)=>!entry.available_months.includes(month));\n            entry.available_months.push(...newMonths);\n        }\n        // Add supplier and spec info\n        let supplier = entry.suppliers.find((s)=>s.id === item.suppliers.id);\n        if (!supplier) {\n            supplier = {\n                id: item.suppliers.id,\n                name: item.suppliers.name,\n                specs: []\n            };\n            entry.suppliers.push(supplier);\n        }\n        supplier.specs.push({\n            id: item.product_packaging_specs.id,\n            packaging_label: ((_item_product_packaging_specs_packaging_options = item.product_packaging_specs.packaging_options) === null || _item_product_packaging_specs_packaging_options === void 0 ? void 0 : _item_product_packaging_specs_packaging_options.label) || 'Unknown',\n            size_name: ((_item_product_packaging_specs_size_options = item.product_packaging_specs.size_options) === null || _item_product_packaging_specs_size_options === void 0 ? void 0 : _item_product_packaging_specs_size_options.name) || 'Unknown',\n            available_months: item.available_months || []\n        });\n    });\n    return Array.from(processed.values()).sort((a, b)=>a.product_name.localeCompare(b.product_name));\n}\nfunction useProductCalendar(searchTerm1) {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'product-calendar',\n            searchTerm1\n        ],\n        queryFn: {\n            \"useProductCalendar.useQuery\": ()=>fetchProductCalendarData(searchTerm1)\n        }[\"useProductCalendar.useQuery\"],\n        staleTime: 5 * 60 * 1000\n    });\n}\n// Get some random products for default view\nfunction useRandomProducts() {\n    return (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'random-products'\n        ],\n        queryFn: {\n            \"useRandomProducts.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('products').select('name').eq('is_active', true).limit(3);\n                if (error) throw error;\n                return (data === null || data === void 0 ? void 0 : data.map({\n                    \"useRandomProducts.useQuery\": (p)=>p.name\n                }[\"useRandomProducts.useQuery\"])) || [];\n            }\n        }[\"useRandomProducts.useQuery\"],\n        staleTime: 10 * 60 * 1000\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/use-product-calendar.ts\n"));

/***/ })

});