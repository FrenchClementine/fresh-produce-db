"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/settings/page",{

/***/ "(app-pages-browser)/./src/hooks/use-products.ts":
/*!***********************************!*\
  !*** ./src/hooks/use-products.ts ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCertifications: () => (/* binding */ useCertifications),\n/* harmony export */   useHubs: () => (/* binding */ useHubs),\n/* harmony export */   usePackagingOptions: () => (/* binding */ usePackagingOptions),\n/* harmony export */   usePallets: () => (/* binding */ usePallets),\n/* harmony export */   useProductSpecs: () => (/* binding */ useProductSpecs),\n/* harmony export */   useProducts: () => (/* binding */ useProducts),\n/* harmony export */   useSizeOptions: () => (/* binding */ useSizeOptions),\n/* harmony export */   useSupplierCertifications: () => (/* binding */ useSupplierCertifications),\n/* harmony export */   useSupplierLogistics: () => (/* binding */ useSupplierLogistics),\n/* harmony export */   useSupplierProducts: () => (/* binding */ useSupplierProducts),\n/* harmony export */   useSuppliers: () => (/* binding */ useSuppliers)\n/* harmony export */ });\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"(app-pages-browser)/./node_modules/@tanstack/react-query/build/modern/useQuery.js\");\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n\n\nfunction useProducts() {\n    const { data: products, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'products'\n        ],\n        queryFn: {\n            \"useProducts.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('products').select('*').eq('is_active', true).order('name');\n                if (error) throw error;\n                return data;\n            }\n        }[\"useProducts.useQuery\"]\n    });\n    return {\n        products,\n        isLoading,\n        error\n    };\n}\nfunction useProductSpecs() {\n    const { data: productSpecs, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'product-specs'\n        ],\n        queryFn: {\n            \"useProductSpecs.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('product_packaging_specs').select(\"\\n          *,\\n          products:product_id(id, name, category),\\n          packaging_options:packaging_id(id, label, unit_type),\\n          pallets:pallet_id(id, label, dimensions_cm),\\n          size_options:size_option_id(id, name)\\n        \").order('created_at');\n                if (error) {\n                    console.error('Product specs query failed:', error);\n                    throw error;\n                }\n                return data || [];\n            }\n        }[\"useProductSpecs.useQuery\"]\n    });\n    return {\n        productSpecs,\n        isLoading,\n        error\n    };\n}\nfunction usePackagingOptions() {\n    const { data: packagingOptions, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'packaging-options'\n        ],\n        queryFn: {\n            \"usePackagingOptions.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('packaging_options').select('*').order('label');\n                if (error) throw error;\n                return data;\n            }\n        }[\"usePackagingOptions.useQuery\"]\n    });\n    return {\n        packagingOptions,\n        isLoading,\n        error\n    };\n}\nfunction useSizeOptions() {\n    const { data: sizeOptions, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'size-options'\n        ],\n        queryFn: {\n            \"useSizeOptions.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('size_options').select('*').order('name');\n                if (error) throw error;\n                return data;\n            }\n        }[\"useSizeOptions.useQuery\"]\n    });\n    return {\n        sizeOptions,\n        isLoading,\n        error\n    };\n}\nfunction usePallets() {\n    const { data: pallets, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'pallets'\n        ],\n        queryFn: {\n            \"usePallets.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('pallets').select('*').order('label');\n                if (error) throw error;\n                return data;\n            }\n        }[\"usePallets.useQuery\"]\n    });\n    return {\n        pallets,\n        isLoading,\n        error\n    };\n}\n// ================================================\n// SUPPLIER HOOKS\n// ================================================\nfunction useSuppliers() {\n    const { data: suppliers, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'suppliers'\n        ],\n        queryFn: {\n            \"useSuppliers.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('suppliers').select('*').order('name');\n                if (error) {\n                    console.error('Error fetching suppliers:', error);\n                    throw error;\n                }\n                return data;\n            }\n        }[\"useSuppliers.useQuery\"]\n    });\n    return {\n        suppliers,\n        isLoading,\n        error\n    };\n}\nfunction useCertifications() {\n    const { data: certifications, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'certifications'\n        ],\n        queryFn: {\n            \"useCertifications.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('certifications').select('*').order('name');\n                if (error) {\n                    console.error('Error fetching certifications:', error);\n                    throw error;\n                }\n                return data;\n            }\n        }[\"useCertifications.useQuery\"]\n    });\n    return {\n        certifications,\n        isLoading,\n        error\n    };\n}\nfunction useHubs() {\n    const { data: hubs, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'hubs'\n        ],\n        queryFn: {\n            \"useHubs.useQuery\": async ()=>{\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('hubs').select('*').order('name');\n                if (error) {\n                    console.error('Error fetching hubs:', error);\n                    throw error;\n                }\n                return data;\n            }\n        }[\"useHubs.useQuery\"]\n    });\n    return {\n        hubs,\n        isLoading,\n        error\n    };\n}\nfunction useSupplierProducts(supplierId) {\n    const { data: supplierProducts, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'supplier-products',\n            supplierId\n        ],\n        queryFn: {\n            \"useSupplierProducts.useQuery\": async ()=>{\n                let query = _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('supplier_product_packaging_spec').select(\"\\n          *,\\n          suppliers:supplier_id(id, name),\\n          product_packaging_specs:product_packaging_spec_id(\\n            id,\\n            products:product_id(id, name, category),\\n            packaging_options:packaging_id(id, label, unit_type),\\n            pallets:pallet_id(id, label, dimensions_cm),\\n            size_options:size_option_id(id, name),\\n            boxes_per_pallet,\\n            weight_per_box,\\n            weight_per_pallet,\\n            weight_unit,\\n            pieces_per_box\\n          )\\n        \").order('created_at', {\n                    ascending: false\n                });\n                if (supplierId) {\n                    query = query.eq('supplier_id', supplierId);\n                }\n                const { data, error } = await query;\n                if (error) {\n                    console.error('Error fetching supplier products:', error);\n                    throw error;\n                }\n                return data;\n            }\n        }[\"useSupplierProducts.useQuery\"],\n        enabled: !!supplierId || supplierId === undefined\n    });\n    return {\n        supplierProducts,\n        isLoading,\n        error\n    };\n}\nfunction useSupplierLogistics(supplierId) {\n    const { data: supplierLogistics, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'supplier-logistics',\n            supplierId\n        ],\n        queryFn: {\n            \"useSupplierLogistics.useQuery\": async ()=>{\n                if (!supplierId) return [];\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('supplier_logistics_capabilities').select(\"\\n          *,\\n          origin_hub:hubs!origin_hub_id(*),\\n          destination_hub:hubs!destination_hub_id(*)\\n        \").eq('supplier_id', supplierId).order('created_at', {\n                    ascending: false\n                });\n                if (error) {\n                    console.error('Error fetching supplier logistics:', error);\n                    throw error;\n                }\n                return data;\n            }\n        }[\"useSupplierLogistics.useQuery\"],\n        enabled: !!supplierId\n    });\n    return {\n        supplierLogistics,\n        isLoading,\n        error\n    };\n}\nfunction useSupplierCertifications(supplierId) {\n    const { data: supplierCertifications, isLoading, error } = (0,_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.useQuery)({\n        queryKey: [\n            'supplier-certifications',\n            supplierId\n        ],\n        queryFn: {\n            \"useSupplierCertifications.useQuery\": async ()=>{\n                if (!supplierId) return [];\n                const { data, error } = await _lib_supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from('supplier_certifications').select(\"\\n          *,\\n          certifications:certification_id(*)\\n        \").eq('supplier_id', supplierId).order('created_at', {\n                    ascending: false\n                });\n                if (error) {\n                    console.error('Error fetching supplier certifications:', error);\n                    throw error;\n                }\n                return data;\n            }\n        }[\"useSupplierCertifications.useQuery\"],\n        enabled: !!supplierId\n    });\n    return {\n        supplierCertifications,\n        isLoading,\n        error\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/use-products.ts\n"));

/***/ })

});